/*! For license information please see main.js.LICENSE.txt */
(()=>{var __webpack_exports__={};(()=>{"use strict";!function(){const e=(e,r)=>`\n        <div class="hidden bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">\n            <p class="font-bold">${e}</p>\n            <p>${r}</p>\n        </div>`;function r(r){if(0===r.length){const r=$(e("Connection Error","Connection to metamask failed. Please try again"));r.appendTo(".grid"),r.toggle(500)}else{const e=r[0],n=$('\n        <div class="hidden bg-teal-100 border-l-4 border-teal-500 text-teal-900 p-4" role="alert">\n            <p class="font-bold">Connection Success</p>\n            <p>You will be redirected to buzzer nft input page</p>\n        </div>');n.appendTo(".grid"),n.toggle(500),console.log(e)}}$(document).ready((async()=>{$("#mt-connect").click((async()=>{await async function(){const n=window.ethereum;n?(console.log("Ethereum successfully detected!"),await n.request({method:"eth_chainId"}),await n.request({method:"eth_requestAccounts"}).then(r).catch((r=>{if(r){console.log(r);const n=$(e("Connection Error","Connection to metamask failed. Please try again"));n.appendTo(".connect-mtmsk"),n.toggle(500)}}))):console.error("Please install MetaMask!",error)}()}))}))}()})(),(()=>{(()=>{"use strict";var __webpack_modules__={"./src/js/et.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ et)\n/* harmony export */ });\nfunction et(){\r\n    const alert = (title, msg) => {\r\n        return `\r\n        <div class="hidden bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">\r\n            <p class="font-bold">${title}</p>\r\n            <p>${msg}</p>\r\n        </div>`\r\n    }\r\n\r\n    const success = (title, msg) => {\r\n        return `\r\n        <div class="hidden bg-teal-100 border-l-4 border-teal-500 text-teal-900 p-4" role="alert">\r\n            <p class="font-bold">${title}</p>\r\n            <p>${msg}</p>\r\n        </div>`\r\n    }\r\n\r\n    $(document).ready(async () => {\r\n        $("#mt-connect").click(async () => {\r\n            await s();\r\n        })\r\n    })\r\n\r\n    function handleAccountsChanged(accounts) {\r\n        if (accounts.length === 0) {\r\n            const info = $(alert("Connection Error", "Connection to metamask failed. Please try again"))\r\n            info.appendTo(".grid")\r\n            info.toggle(500)\r\n        } else {\r\n            const currentAccount = accounts[0];\r\n            const info = $(success("Connection Success", "You will be redirected to buzzer nft input page"))\r\n            info.appendTo(".grid")\r\n            info.toggle(500)\r\n            console.log(currentAccount)\r\n            \r\n        }\r\n    }  \r\n\r\n    async function s(){\r\n        const provider = window.ethereum\r\n        if (provider) {\r\n            console.log(\'Ethereum successfully detected!\')\r\n            const chainId = await provider.request({\r\n                method: \'eth_chainId\'\r\n            })\r\n            const cred = await provider.request({ method: \'eth_requestAccounts\' }).then(handleAccountsChanged).catch((err) => {\r\n            if (err) {\r\n                console.log(err)\r\n                const info = $(alert("Connection Error", "Connection to metamask failed. Please try again"))\r\n                info.appendTo(".connect-mtmsk")\r\n                info.toggle(500)\r\n            }\r\n            });\r\n        } else {\r\n            console.error(\'Please install MetaMask!\', error)\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://buzzer/./src/js/et.js?')},"./src/js/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _et_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./et.js */ "./src/js/et.js");\n\r\n\r\n(0,_et_js__WEBPACK_IMPORTED_MODULE_0__["default"])()\n\n//# sourceURL=webpack://buzzer/./src/js/index.js?')}},__webpack_module_cache__={};function __nested_webpack_require_3091__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__nested_webpack_require_3091__),n.exports}__nested_webpack_require_3091__.d=(e,r)=>{for(var n in r)__nested_webpack_require_3091__.o(r,n)&&!__nested_webpack_require_3091__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},__nested_webpack_require_3091__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__nested_webpack_require_3091__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__nested_webpack_require_3091__("./src/js/index.js")})()})()})();